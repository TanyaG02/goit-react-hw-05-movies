{"version":3,"file":"static/js/301.17b8848c.chunk.js","mappings":"wRAEaA,EAAgBC,EAAAA,GAAAA,OAAH,4WAgBbC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAmBF,EAAAA,GAAAA,OAAH,siBA4BhBG,EAAkBH,EAAAA,GAAAA,MAAH,0P,2BC5Cb,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAiC/B,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE6BC,EAAAA,EAAAA,IAAYH,GAFzC,OAG8B,KADpBI,EAFV,QAGmBC,QACbC,MAAM,eAAD,OAAgBN,EAAhB,uBAEPN,EAAUU,GANd,gDAQIG,EAAAA,GAAAA,MAAY,UARhB,0DALc,sBACA,OAAVP,GADU,mCAiBdQ,EACD,GAAE,CAACR,KAGF,iCACE,SAACd,EAAD,WACE,UAACE,EAAD,CAAYqB,SAlCG,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAAEC,MAAOU,EAAEE,cAAcC,SAASb,MAAMc,QAEJ,KAAhDJ,EAAEE,cAAcC,SAASb,MAAMc,MAAMC,OAIzCL,EAAEE,cAAcI,QAHdT,EAAAA,GAAAA,MAAY,SAIf,EAyBK,WACE,UAAClB,EAAD,CAAkB4B,KAAK,SAAvB,WACE,SAAC,MAAD,CAAUC,KAAM,KADlB,KACyB,yCAGzB,SAAC5B,EAAD,CACE2B,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,eAKV7B,EAAOY,OAAS,IACf,wBACGZ,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMjC,GAA1C,SACG8B,KAFID,EADC,QAWrB,C","sources":["components/Movies/MoviesPage.styled.js","components/Movies/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchbarHead = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1;\n  display: flex;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n  span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchMovie } from 'components/Api/MoviesDB';\nimport {\n  SearchbarHead,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './MoviesPage.styled';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n\n    if (e.currentTarget.elements.query.value.trim() === '') {\n      toast.error('Wrong!');\n      return;\n    }\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n\n    async function SearchFilms() {\n      try {\n        const cardSearch = await SearchMovie(query);\n        if (cardSearch.length === 0) {\n          alert(`on request \"${query}\", movie not found`);\n        }\n        setMovies(cardSearch);\n      } catch (error) {\n        toast.error('Wrong!');\n      }\n    }\n\n    SearchFilms();\n  }, [query]);\n\n  return (\n    <>\n      <SearchbarHead>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormButton type=\"submit\">\n            <FcSearch size={20} /> <span>Search</span>\n          </SearchFormButton>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"query\"\n          />\n        </SearchForm>\n      </SearchbarHead>\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["SearchbarHead","styled","SearchForm","SearchFormButton","SearchFormInput","MoviesPage","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","SearchMovie","cardSearch","length","alert","toast","SearchFilms","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","size","autoComplete","autoFocus","placeholder","name","map","id","title","to","state","from"],"sourceRoot":""}